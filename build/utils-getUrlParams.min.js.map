{"version":3,"file":"build/utils-getUrlParams.min.js","mappings":";;;;;;;;;;;;;AAAO,SAASA,eAAeA,CAACC,GAAG,EAAE;EACjC;;EAEA;EACA,IAAIC,WAAW,GAAGD,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;EAE3E;EACA,IAAIC,GAAG,GAAG,CAAC,CAAC;;EAEZ;EACA,IAAIN,WAAW,EAAE;IACb;IACAA,WAAW,GAAGA,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEvC;IACA,IAAIM,GAAG,GAAGP,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC;IAEhC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACjC;MACA,IAAIE,CAAC,GAAGH,GAAG,CAACC,CAAC,CAAC,CAACP,KAAK,CAAC,GAAG,CAAC;;MAEzB;MACA,IAAIU,SAAS,GAAGD,CAAC,CAAC,CAAC,CAAC;MACpB,IAAIE,UAAU,GAAG,OAAOF,CAAC,CAAC,CAAC,CAAC,KAAK,WAAW,GAAG,IAAI,GAAGA,CAAC,CAAC,CAAC,CAAC;;MAE1D;MACAC,SAAS,GAAGA,SAAS,CAACE,WAAW,CAAC,CAAC;MACnC,IAAI,OAAOD,UAAU,KAAK,QAAQ,EAAEA,UAAU,GAAGA,UAAU,CAACC,WAAW,CAAC,CAAC;;MAEzE;MACA,IAAIF,SAAS,CAACG,KAAK,CAAC,aAAa,CAAC,EAAE;QAChC;QACA,IAAIC,GAAG,GAAGJ,SAAS,CAACK,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;QAC7C,IAAI,CAACV,GAAG,CAACS,GAAG,CAAC,EAAET,GAAG,CAACS,GAAG,CAAC,GAAG,EAAE;;QAE5B;QACA,IAAIJ,SAAS,CAACG,KAAK,CAAC,UAAU,CAAC,EAAE;UAC7B;UACA,IAAIG,KAAK,GAAG,WAAW,CAACC,IAAI,CAACP,SAAS,CAAC,CAAC,CAAC,CAAC;UAC1CL,GAAG,CAACS,GAAG,CAAC,CAACE,KAAK,CAAC,GAAGL,UAAU;QAChC,CAAC,MAAM;UACH;UACAN,GAAG,CAACS,GAAG,CAAC,CAACI,IAAI,CAACP,UAAU,CAAC;QAC7B;MACJ,CAAC,MAAM;QACH;QACA,IAAI,CAACN,GAAG,CAACK,SAAS,CAAC,EAAE;UACjB;UACAL,GAAG,CAACK,SAAS,CAAC,GAAGC,UAAU;QAC/B,CAAC,MAAM,IAAIN,GAAG,CAACK,SAAS,CAAC,IAAI,OAAOL,GAAG,CAACK,SAAS,CAAC,KAAK,QAAQ,EAAE;UAC7D;UACAL,GAAG,CAACK,SAAS,CAAC,GAAG,CAACL,GAAG,CAACK,SAAS,CAAC,CAAC;UACjCL,GAAG,CAACK,SAAS,CAAC,CAACQ,IAAI,CAACP,UAAU,CAAC;QACnC,CAAC,MAAM;UACH;UACAN,GAAG,CAACK,SAAS,CAAC,CAACQ,IAAI,CAACP,UAAU,CAAC;QACnC;MACJ;IACJ;EACJ;EAEA,OAAON,GAAG;AACd","sources":["webpack://maneko/./assets/js/utils/getUrlParams.js"],"sourcesContent":["export function getAllUrlParams(url) {\n    // source: https://www.codegrepper.com/profile/mysterious-mosquito-ntw1hk6d203w\n\n    // get query string from url (optional) or window\n    var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n\n    // we'll store the parameters here\n    var obj = {};\n\n    // if query string exists\n    if (queryString) {\n        // stuff after # is not part of query string, so get rid of it\n        queryString = queryString.split('#')[0];\n\n        // split our query string into its component parts\n        var arr = queryString.split('&');\n\n        for (var i = 0; i < arr.length; i++) {\n            // separate the keys and the values\n            var a = arr[i].split('=');\n\n            // set parameter name and value (use 'true' if empty)\n            var paramName = a[0];\n            var paramValue = typeof a[1] === 'undefined' ? true : a[1];\n\n            // (optional) keep case consistent\n            paramName = paramName.toLowerCase();\n            if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n\n            // if the paramName ends with square brackets, e.g. colors[] or colors[2]\n            if (paramName.match(/\\[(\\d+)?\\]$/)) {\n                // create key if it doesn't exist\n                var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n                if (!obj[key]) obj[key] = [];\n\n                // if it's an indexed array e.g. colors[2]\n                if (paramName.match(/\\[\\d+\\]$/)) {\n                    // get the index value and add the entry at the appropriate position\n                    var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n                    obj[key][index] = paramValue;\n                } else {\n                    // otherwise add the value to the end of the array\n                    obj[key].push(paramValue);\n                }\n            } else {\n                // we're dealing with a string\n                if (!obj[paramName]) {\n                    // if it doesn't exist, create property\n                    obj[paramName] = paramValue;\n                } else if (obj[paramName] && typeof obj[paramName] === 'string') {\n                    // if property does exist and it's a string, convert it to an array\n                    obj[paramName] = [obj[paramName]];\n                    obj[paramName].push(paramValue);\n                } else {\n                    // otherwise add the property\n                    obj[paramName].push(paramValue);\n                }\n            }\n        }\n    }\n\n    return obj;\n}\n"],"names":["getAllUrlParams","url","queryString","split","window","location","search","slice","obj","arr","i","length","a","paramName","paramValue","toLowerCase","match","key","replace","index","exec","push"],"sourceRoot":""}